parameters:
  env_file: ci/requirements/$CONDA_ENV.yml

steps:

- template: add-conda-to-path.yml

- bash: |
    echo $MAMBA_EXE
    echo $MAMBA_ROOT_PREFIX
    source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
    micromamba activate
    micromamba create --yes --strict-channel-priority --file ${{ parameters.env_file }}
  displayName: Install conda environment (Linux, OSX)
  condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    source activate base
    conda config --add channels conda-forge
    conda config --set channel_priority strict
    conda install --yes mamba
    mamba env create -n wradlib-tests --file ${{ parameters.env_file }}
  displayName: Install conda environment (Windows_NT)
  condition: eq(variables['Agent.OS'], 'Windows_NT')

#- powershell: |
#    $Env:MAMBA_ROOT_PREFIX=(Join-Path -Path $HOME -ChildPath micromamba)
#    $Env:MAMBA_EXE=(Join-Path -Path (Get-Location) -ChildPath micromamba.exe)
#    $Env:MAMBA_EXE
#    echo $env:CENV
#    echo $env:CONDA_ENV
#    get-childitem -file
#    .\micromamba.exe --help
#    .\micromamba.exe create -v --yes --strict-channel-priority --file $PWD\$env:CENV\$env:CONDA_ENV.yml
#  displayName: Install conda environment (Windows_NT)
#  condition: eq(variables['Agent.OS'], 'Windows_NT')
#  env:
#    Cenv: ci\requirements

- bash: |
    echo $MAMBA_EXE
    echo $MAMBA_ROOT_PREFIX
    source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
    micromamba activate wradlib-tests
    python -m pip install --no-deps -e .
  displayName: Install wradlib (Linux, OSX)
  condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    source activate wradlib-tests
    python -m pip install --no-deps -e .
  displayName: Install wradlib (Windows)
  condition: eq(variables['Agent.OS'], 'Windows_NT')


- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-data.git data
    echo "##vso[task.setvariable variable=WRADLIB_DATA]$PWD/data"
  condition: eq(variables.test_data, true)
  displayName: Install wradlib-data

- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-notebooks.git notebooks
  condition: eq(variables.notebooks, true)
  displayName: Install wradlib-notebooks

- bash: |
    echo $MAMBA_EXE
    echo $MAMBA_ROOT_PREFIX
    source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
    micromamba activate wradlib-tests
    micromamba list
    python -c "import wradlib; print(wradlib.version.full_version)"
  displayName: Version info (Linux, OSX)
  condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))

- bash: |
    source activate wradlib-tests
    conda info -a
    conda list
  displayName: Version info (Windows)
  condition: eq(variables['Agent.OS'], 'Windows_NT')


