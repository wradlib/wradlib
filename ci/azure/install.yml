parameters:
  env_file: ci/requirements/$CONDA_ENV.yml

steps:

- template: add-conda-to-path.yml

- task: Bash@3
  displayName: Install conda environment
  inputs:
    targetType: 'inline'
    script: |
      echo $MAMBA_EXE
      echo $MAMBA_ROOT_PREFIX
      #export MAMBA_EXE="/home/vsts/work/1/s/micromamba"
      #export MAMBA_ROOT_PREFIX="/home/vsts/micromamba"
      source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
      micromamba activate
      micromamba create --yes --strict-channel-priority --file ${{ parameters.env_file }}
    noProfile: false
    noRc: false

- bash: |
    echo $MAMBA_EXE
    echo $MAMBA_ROOT_PREFIX
    #export MAMBA_EXE="/home/vsts/work/1/s/micromamba"
    #export MAMBA_ROOT_PREFIX="/home/vsts/micromamba"
    source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.shs -lart /home/vsts/micromamba/envs
    micromamba activate wradlib-tests
    python -m pip install --no-deps -e .
  displayName: Install wradlib

- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-data.git data
    echo "##vso[task.setvariable variable=WRADLIB_DATA]$PWD/data"
  condition: eq(variables.test_data, true)
  displayName: Install wradlib-data

- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-notebooks.git notebooks
  condition: eq(variables.notebooks, true)
  displayName: Install wradlib-notebooks

- bash: |
    echo $MAMBA_EXE
    echo $MAMBA_ROOT_PREFIX
    #export MAMBA_EXE="/home/vsts/work/1/s/micromamba"
    #export MAMBA_ROOT_PREFIX="/home/vsts/micromamba"
    source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
    micromamba activate wradlib-tests
    micromamba list
    python -c "import wradlib; print(wradlib.version.full_version)"
  displayName: Version info
