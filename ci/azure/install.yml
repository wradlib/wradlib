parameters:
  env_file: ci/requirements/$CONDA_ENV.yml

steps:

- template: add-conda-to-path.yml

- bash: |
    eval "$(./micromamba shell hook -s bash)"
    #echo $MAMBA_EXE
    #echo $MAMBA_ROOT_PREFIX
    #source $MAMBA_ROOT_PREFIX/etc/profile.d/mamba.sh
    ##micromamba activate
    micromamba create --yes --strict-channel-priority --file ${{ parameters.env_file }}
  displayName: Install conda environment (Linux, OSX)
  condition: or(eq(variables['Agent.OS'], 'Darwin'), eq(variables['Agent.OS'], 'Linux'))

- powershell: |
    $Env:MAMBA_ROOT_PREFIX=(Join-Path -Path $HOME -ChildPath micromamba)
    $Env:MAMBA_EXE=(Join-Path -Path (Get-Location) -ChildPath micromamba.exe)
    $Env:MAMBA_EXE
    echo $env:CENV
    echo $env:CONDA_ENV
    get-childitem -file
    .\micromamba.exe --help
    .\micromamba.exe init --help
    .\micromamba.exe create -v --yes --strict-channel-priority --file $PWD\$env:CENV\$env:CONDA_ENV.yml
  displayName: Install conda environment (Windows_NT)
  condition: eq(variables['Agent.OS'], 'Windows_NT')
  env:
    Cenv: ci\requirements

- bash: |
    eval "$(./micromamba shell hook -s bash)"
    micromamba activate wradlib-tests
    python -m pip install --no-deps -e .
  displayName: Install wradlib

- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-data.git data
    echo "##vso[task.setvariable variable=WRADLIB_DATA]$PWD/data"
  condition: eq(variables.test_data, true)
  displayName: Install wradlib-data

- bash: |
    git clone --depth 1 https://github.com/wradlib/wradlib-notebooks.git notebooks
  condition: eq(variables.notebooks, true)
  displayName: Install wradlib-notebooks

- bash: |
    eval "$(./micromamba shell hook -s bash)"
    micromamba activate wradlib-tests
    micromamba list
    python -c "import wradlib; print(wradlib.version.full_version)"
  displayName: Version info
